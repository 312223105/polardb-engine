//
// Created by root on 11/17/18.
//

#ifndef DBDEMO_CONFIG_H
#define DBDEMO_CONFIG_H

#include <cstddef>
#include <cstdint>

#define OFFSET_ALIGN ((4096))
#define MAX_VALUE_NUM ((6600 * 10000))
//#define MAX_VALUE_NUM ((660480*2))
#define BUCKET_NUM_BITS ((10))
#define BUCKET_NUM ((1 << BUCKET_NUM_BITS))
#define THREAD_NUM ((64))

#define VALUE_SIZE ((4096UL))
#define VALUE_BUFFER_ITEM_COUNT ((4))
#define VALUE_BUFFER_SIZE ((VALUE_BUFFER_ITEM_COUNT*VALUE_SIZE))

//const int VALUE_FILE_DATA_OFFSET = 512+VALUE_BUFFER_SIZE; // size:512B | buffer:~
#define KEY_SIZE ((8))
#define KEY_BUFFER_ITEM_COUNT ((2048))
#define KEY_BUFFER_SIZE ((KEY_BUFFER_ITEM_COUNT*KEY_SIZE))
#define KEY_BUFFER_OFFSET ((4096))

#define BUCKET_ENTRY_MAX_COUNT ((MAX_VALUE_NUM / BUCKET_NUM))
const uint64_t BUCKET_VALUE_MAX_SIZE = (MAX_VALUE_NUM / BUCKET_NUM * VALUE_SIZE / OFFSET_ALIGN + 1) * OFFSET_ALIGN;
const uint64_t BUCKET_KEY_MAX_SIZE = (MAX_VALUE_NUM / BUCKET_NUM * KEY_SIZE / OFFSET_ALIGN + 1) * OFFSET_ALIGN; // must 4096 align
#define GROUP_NUM ((1<<6))
#define BUCKET_NUM_IN_GROUP ((BUCKET_NUM / GROUP_NUM))

#define READ_BLOCK_SIZE ((4096 * 32))
#define RANGE_WORKER_NUM ((2))
#define RANGE_READ_PART ((2))
//#define MAX_FILE_SIZE ((uint64_t(MAX_VALUE_NUM) / BUCKET_NUM * VALUE_SIZE))
#define MAX_FILE_SIZE ((BUCKET_VALUE_MAX_SIZE))
#define READ_PART_SIZE (((MAX_VALUE_NUM / BUCKET_NUM / RANGE_READ_PART * VALUE_SIZE / OFFSET_ALIGN + 1) * OFFSET_ALIGN))
//#define USE_DIRECT ((0))
#define USE_DIRECT ((O_DIRECT))
#endif //DBDEMO_CONFIG_H
